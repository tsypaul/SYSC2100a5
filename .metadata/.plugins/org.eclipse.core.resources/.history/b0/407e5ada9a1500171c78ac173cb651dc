package part1;

public class HashTable {
	private int size = 0;
	private int hashSize = 26;
	private ChainNode[] table;
	
	public HashTable(){
		table = new ChainNode[hashSize];
	}
	
	public boolean tableIsEmpty(){
		return size == 0;
	}
	
	public int tableSize(){
		return hashSize;
	}
	
	public void tableInsert(char key, String value) throws RuntimeException{
		int hash = (key - 'a')/('b' - 'a');
		if(table[hash] == null){
			table[hash] = new ChainNode(key, value, null);
		}else{
			ChainNode first = table[hash];
			while(first.getNext() != null){
				if(first.getValue() == value){
					System.out.println("Symbol exists.");
					return;
				}
				first = first.getNext();
			}
			first.setNext(new ChainNode(key, value, null));
		}
	}
	
	public boolean tableDelete(){
		return true;
	}
	
	public String tableRetrieve(char key){
		return null;
	}
	
}
